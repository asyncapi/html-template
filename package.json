{
  "name": "@asyncapi/html-template",
  "version": "2.1.7",
  "description": "HTML template for the AsyncAPI generator.",
  "keywords": [
    "asyncapi",
    "generator",
    "html",
    "template"
  ],
  "author": "Fran Mendez <fmvilas@gmail.com> (fmvilas.com)",
  "license": "Apache-2.0",
  "files": [
    "__transpiled"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/asyncapi/html-template.git"
  },
  "bugs": {
    "url": "https://github.com/asyncapi/html-template/issues"
  },
  "homepage": "https://github.com/asyncapi/html-template#readme",
  "scripts": {
    "lint": "echo \"No linter specified yet\"",
    "test:library": "jest --coverage",
    "test:generator": "npm run test:generator:v2 && npm run test:generator:v3",
    "test:generator:v2": "asyncapi generate fromTemplate ./test/spec/asyncapi_v2.yml ./ -o test/output --force-write",
    "test:generator:v3": "asyncapi generate fromTemplate ./test/spec/asyncapi_v3.yml ./ -o test/output --force-write",
    "develop": "npm run generate:assets && npm run test:generator:v2 -- --watch-template",
    "develop:install": " npm run develop -- --install",
    "generate:assets": "npm run copy:sources && npm run generate:readme:toc",
    "generate:readme:toc": "markdown-toc -i README.md",
    "bump:version": "npm --no-git-tag-version --allow-same-version version $VERSION",
    "copy:sources": "node ./scripts/copy-sources.js",
    "prepublishOnly": "npm run generate:assets && npm run transpile",
    "transpile": "node ./scripts/transpile.js",
    "test": "npm run test:library && npm run test:generator"
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@asyncapi/generator-react-sdk": "^1.0.9",
    "@asyncapi/parser": "^3.0.5",
    "@asyncapi/react-component": "^1.2.13",
    "highlight.js": "10.7.3",
    "puppeteer": "^14.1.0",
    "react-dom": "^17.0.2",
    "rimraf": "^3.0.2",
    "sync-fetch": "^0.5.2"
  },
  "devDependencies": {
    "@asyncapi/cli": "^1.5.5",
    "cross-env": "^7.0.3",
    "jest": "^26.6.3",
    "jest-esm-transformer": "^1.0.0",
    "markdown-toc": "^1.2.0"
  },
  "generator": {
    "renderer": "react",
    "apiVersion": "v3",
    "generator": ">=1.15.0 <2.0.0",
    "parameters": {
      "sidebarOrganization": {
        "description": "Defines how the sidebar should be organized. 'byTags' to categorize operations by tags in the root of the document, `byTagsNoRoot` does the same but for pub/sub tags.",
        "required": false
      },
      "baseHref": {
        "description": "Sets the base URL for links and forms.",
        "required": false
      },
      "version": {
        "description": "Override the version of your application provided under `info.version` location in the specification file.",
        "required": false
      },
      "singleFile": {
        "description": "If set this parameter to true generate single html file with scripts and styles inside",
        "required": false,
        "default": false
      },
      "outFilename": {
        "description": "The name of the output HTML file",
        "default": "index.html",
        "required": false
      },
      "pdf": {
        "description": "Set to `true` to get index.pdf generated next to your index.html",
        "default": false
      },
      "pdfTimeout": {
        "description": "The timeout (in ms) used to generate the pdf",
        "default": 30000,
        "required": false
      },
      "favicon": {
        "description": "URL/Path of the favicon",
        "default": "",
        "required": false
      },
      "config": {
        "description": "Stringified JSON or a path to a JSON file to override the default React component config. The config override is merged with the default config using the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) algorithm.",
        "default": "",
        "required": false
      }
    },
    "nonRenderableFiles": [
      "js/asyncapi-ui.min.js",
      "css/asyncapi.min.css",
      "css/global.min.css"
    ]
  },
  "babel": {
    "presets": [
      "@babel/preset-env",
      [
        "@babel/preset-react",
        {
          "runtime": "automatic"
        }
      ]
    ]
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "jsx"
    ],
    "setupFilesAfterEnv": [
      "./test/setupTests.js"
    ],
    "moduleNameMapper": {
      "^nimma/legacy$": "<rootDir>/node_modules/nimma/dist/legacy/cjs/index.js",
      "^nimma/(.*)": "<rootDir>/node_modules/nimma/dist/cjs/$1"
    }
  }
}
